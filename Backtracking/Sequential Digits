/*
An integer has sequential digits if and only if each digit in the number is one more than the previous digit.

Return a sorted list of all the integers in the range [low, high] inclusive that have sequential digits.

 

Example 1:

Input: low = 100, high = 300
Output: [123,234]
Example 2:

Input: low = 1000, high = 13000
Output: [1234,2345,3456,4567,5678,6789,12345]
*/

class Solution {
    set<int> ans;
    
    void backtrack(int low,int high,int idx)
    {
       if(idx>9) return;
        
       long long res=0;
        
        for(int i=idx;i<=9;i++)
        {
            res=res*10+i;
            if(res>=low&&res<=high)
            ans.insert(res);
        }
        
        backtrack(low,high,idx+1);
    }
public:
    vector<int> sequentialDigits(int low, int high) {
        
        backtrack(low,high,0);
        vector<int> res;
        
        for(auto it=ans.begin();it!=ans.end();it++)
            res.push_back(*it);
        return res;
    }
};
