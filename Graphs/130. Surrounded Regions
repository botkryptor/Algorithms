/*

Given a 2D board containing 'X' and 'O' (the letter O), capture all regions surrounded by 'X'.

A region is captured by flipping all 'O's into 'X's in that surrounded region.

Example:

X X X X
X O O X
X X O X
X O X X
After running your function, the board should be:

X X X X
X X X X
X X X X
X O X X


*/


class Solution {
public:
    
    void dfs(vector<vector<char>>& board, int i, int j)
    {
        if(i<0||j<0||i>board.size()-1||j>board[0].size()-1) return;
       if(board[i][j]!='O') return;
        board[i][j]='*';
        dfs(board,i+1,j);
        dfs(board,i-1,j);
        dfs(board,i,j+1);
        dfs(board,i,j-1);
        
    }
    void solve(vector<vector<char>>& board) {
        if(board.size()==0) return;
        int rows=board.size();
        int cols=board[0].size();
        for(int i=0;i<rows;i++)
        {
            for(int j=0;j<cols;j++)
            {
                if(i==0||j==0||i==rows-1||j==cols-1){
                     dfs(board,i,j);
                }
            }
        }
        
        for(int i=0;i<rows;i++)
        {
            for(int j=0;j<cols;j++)
            {
                if(board[i][j]=='O') board[i][j]='X';
                if(board[i][j]=='*') board[i][j]='O';
            }
        }
        
        
        
    }
};
