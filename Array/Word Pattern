/*
Given a pattern and a string str, find if str follows the same pattern.

Here follow means a full match, such that there is a bijection between a letter in pattern and a non-empty word in str.

Example 1:

Input: pattern = "abba", str = "dog cat cat dog"
Output: true
Example 2:

Input:pattern = "abba", str = "dog cat cat fish"
Output: false
Example 3:

Input: pattern = "aaaa", str = "dog cat cat dog"
Output: false
Example 4:

Input: pattern = "abba", str = "dog dog dog dog"
Output: false
*/

class Solution {
public:
    bool wordPattern(string pattern, string str) {
        stringstream check(str);
        string op;
        unordered_map<char,string> m;
        set<string> s;
        int i=0;
        int j=0;
        while(getline(check, op, ' ') && i<pattern.size()){
            if(m.find(pattern[i])==m.end() && s.find(op)==s.end()){ 
                m[pattern[i]]=op;                   
                s.insert(op);
                i++;
                j+=op.size()+1;
            }
            else if(m.find(pattern[i])!=m.end() && m[pattern[i]]==op ) {i++; j+=op.size()+1;}
            else return 0;
        }
        j--;
        if(j!=str.size()) return 0;
        if(i!=pattern.size()) return 0;
        if(getline(check,op,' ')) return 0;
        return 1;
        
    }
};
