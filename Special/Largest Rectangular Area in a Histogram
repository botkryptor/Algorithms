class Solution {
public:
    int largestRectangleArea(vector<int>& hist) {
        if(hist.size()==0) return 0;
        int n=hist.size();
        int max_area=INT_MIN;
        int area_with_top;
        int tp;
        stack<int> s;
        int i=0;
        while(i<n)
        {
            if(s.empty()||hist[s.top()]<hist[i])
               
               {
                   s.push(i);
                   i++;
               }
               
               else
               {
                   tp=s.top();
                   s.pop();
                   area_with_top=hist[tp]*(s.empty()?i: i-s.top()-1);
                  max_area=max(max_area,area_with_top);
                       
               }
        }
        while(!s.empty())
        {
            tp=s.top();
            s.pop();
            area_with_top=hist[tp]*(s.empty()?i:i-s.top()-1);
            max_area=max(max_area,area_with_top);
        }
        return max_area;
        
    }
};
